/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.publicity.ui;

import java.awt.event.KeyEvent;
import javax.swing.JPopupMenu;
import javax.swing.JTextField;

/**
 *
 * @author Administrador
 */
public class TimePanel extends javax.swing.JPanel {

    /**
     * Creates new form TimePanel
     */
    public TimePanel() {
        initComponents();        
    }
    
    public TimePanel(JPopupMenu popup) {
        initComponents();
        this.popup = popup;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        hourSlider = new javax.swing.JSlider();
        minuteSlider = new javax.swing.JSlider();

        setFocusCycleRoot(true);
        setFocusTraversalPolicyProvider(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Hora:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("Minuto:");

        hourSlider.setMajorTickSpacing(1);
        hourSlider.setMaximum(11);
        hourSlider.setValue(0);
        hourSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hourSliderStateChanged(evt);
            }
        });
        hourSlider.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hourSliderKeyPressed(evt);
            }
        });

        minuteSlider.setMajorTickSpacing(1);
        minuteSlider.setMaximum(59);
        minuteSlider.setValue(0);
        minuteSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minuteSliderStateChanged(evt);
            }
        });
        minuteSlider.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                minuteSliderKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hourSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(minuteSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hourSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(minuteSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hourSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hourSliderStateChanged
        setValue();
    }//GEN-LAST:event_hourSliderStateChanged

    private void minuteSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minuteSliderStateChanged
        setValue();
    }//GEN-LAST:event_minuteSliderStateChanged

    private void hourSliderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hourSliderKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            popup.setVisible(false);
    }//GEN-LAST:event_hourSliderKeyPressed

    private void minuteSliderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_minuteSliderKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            popup.setVisible(false);
    }//GEN-LAST:event_minuteSliderKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider hourSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSlider minuteSlider;
    // End of variables declaration//GEN-END:variables
    
    private javax.swing.JPopupMenu popup = new javax.swing.JPopupMenu();
    private javax.swing.JTextField horaField;
    
    private String format = "%1$02d:%2$02d";
    
    public void setComponent(JTextField hourField) {
        this.horaField = hourField;
        Integer hour = 0;
        Integer minute = 0;
        try {
            String [] time = hourField.getText().split(":");
            hour = Integer.parseInt(time[0]);
            minute = Integer.parseInt(time[1]);
        } catch (NumberFormatException ex) {
            
        }
        hourSlider.setValue(hour);
        hourSlider.requestFocus();
        minuteSlider.setValue(minute);
        setValue();        
    }
    
    private void setValue() {
        horaField.setText(String.format(format, hourSlider.getValue(), minuteSlider.getValue()));
    }
}
